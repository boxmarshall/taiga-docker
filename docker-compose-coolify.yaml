services:
  taiga-db:
    image: postgres:12.3
    environment:
      POSTGRES_DB: "taiga"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 2s
      timeout: 15s
      retries: 5
      start_period: 3s
    volumes:
      - taiga-db-data:/var/lib/postgresql/data
    networks:
      - taiga

  taiga-back:
    build: 
      context: ./taiga-back
      dockerfile: Dockerfile

    environment:   # These environment variables will be used by taiga-back and taiga-async.

      # Database settings
      POSTGRES_DB: "taiga"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_HOST: "taiga-db"
      # Taiga settings
      TAIGA_SECRET_KEY: "${SECRET_KEY}"
      TAIGA_SITES_SCHEME: "${TAIGA_SCHEME}"
      TAIGA_SITES_DOMAIN: "${TAIGA_DOMAIN}"
      TAIGA_SUBPATH: "${SUBPATH}"
      # Email settings.
      EMAIL_BACKEND: "django.core.mail.backends.${EMAIL_BACKEND}.EmailBackend"
      DEFAULT_FROM_EMAIL: "${EMAIL_DEFAULT_FROM}"
      EMAIL_USE_TLS: "${EMAIL_USE_TLS}"
      EMAIL_USE_SSL: "${EMAIL_USE_SSL}"
      EMAIL_HOST: "${EMAIL_HOST}"
      EMAIL_PORT: "${EMAIL_PORT}"
      EMAIL_HOST_USER: "${EMAIL_HOST_USER}"
      EMAIL_HOST_PASSWORD: "${EMAIL_HOST_PASSWORD}"
      PUBLIC_REGISTER_ENABLED: "${PUBLIC_REGISTER_ENABLED}"
      # Rabbitmq settings
      RABBITMQ_USER: "${RABBITMQ_USER}"
      RABBITMQ_PASS: "${RABBITMQ_PASS}"
      # Telemetry settings
      ENABLE_TELEMETRY: "${ENABLE_TELEMETRY}"
      # ...your customizations go here

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/wiki"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

    volumes:  # These volumens will be used by taiga-back and taiga-async.
      - taiga-static-data:/taiga-back/static
      - taiga-media-data:/taiga-back/media
      # - ./config.py:/taiga-back/settings/config.py


    networks:
      - taiga
    depends_on:
      taiga-db:
        condition: service_healthy
      taiga-events-rabbitmq:
        condition: service_started
      taiga-async-rabbitmq:
        condition: service_started

  taiga-async:
    image: taigaio/taiga-back:latest
    entrypoint: ["/taiga-back/docker/async_entrypoint.sh"]
    environment:  # These environment variables will be used by taiga-back and taiga-async.
      # Database settings
      POSTGRES_DB: "taiga"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_HOST: "taiga-db"
      # Taiga settings
      TAIGA_SECRET_KEY: "${SECRET_KEY}"
      TAIGA_SITES_SCHEME: "${TAIGA_SCHEME}"
      TAIGA_SITES_DOMAIN: "${TAIGA_DOMAIN}"
      TAIGA_SUBPATH: "${SUBPATH}"
      # Email settings.
      EMAIL_BACKEND: "django.core.mail.backends.${EMAIL_BACKEND}.EmailBackend"
      DEFAULT_FROM_EMAIL: "${EMAIL_DEFAULT_FROM}"
      EMAIL_USE_TLS: "${EMAIL_USE_TLS}"
      EMAIL_USE_SSL: "${EMAIL_USE_SSL}"
      EMAIL_HOST: "${EMAIL_HOST}"
      EMAIL_PORT: "${EMAIL_PORT}"
      EMAIL_HOST_USER: "${EMAIL_HOST_USER}"
      EMAIL_HOST_PASSWORD: "${EMAIL_HOST_PASSWORD}"
      # Rabbitmq settings
      RABBITMQ_USER: "${RABBITMQ_USER}"
      RABBITMQ_PASS: "${RABBITMQ_PASS}"
      # Telemetry settings
      ENABLE_TELEMETRY: "${ENABLE_TELEMETRY}"
      # ...your customizations go here


    volumes:  # These volumens will be used by taiga-back and taiga-async.
      - taiga-static-data:/taiga-back/static
      - taiga-media-data:/taiga-back/media
      # - ./config.py:/taiga-back/settings/config.py


    networks:
      - taiga
    depends_on:
      taiga-db:
        condition: service_healthy
      taiga-events-rabbitmq:
        condition: service_started
      taiga-async-rabbitmq:
        condition: service_started

  taiga-async-rabbitmq:
    image: rabbitmq:3.8-management-alpine
    environment:
      RABBITMQ_ERLANG_COOKIE: "${RABBITMQ_ERLANG_COOKIE}"
      RABBITMQ_DEFAULT_USER: "${RABBITMQ_USER}"
      RABBITMQ_DEFAULT_PASS: "${RABBITMQ_PASS}"
      RABBITMQ_DEFAULT_VHOST: "${RABBITMQ_VHOST}"

    hostname: "taiga-async-rabbitmq"

    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_running"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

    volumes:
      - taiga-async-rabbitmq-data:/var/lib/rabbitmq

    networks:
      - taiga

  taiga-front:
    image: taigaio/taiga-front:latest
    environment:
      TAIGA_URL: "${TAIGA_SCHEME}://${TAIGA_DOMAIN}"
      TAIGA_WEBSOCKETS_URL: "${WEBSOCKETS_SCHEME}://${TAIGA_DOMAIN}"
      TAIGA_SUBPATH: "${SUBPATH}"
      # ...your customizations go here
      #
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

    networks:
      - taiga
    # volumes:
    #   - ./conf.json:/usr/share/nginx/html/conf.json

  taiga-events:
    image: taigaio/taiga-events:latest
    environment:
      RABBITMQ_USER: "${RABBITMQ_USER}"
      RABBITMQ_PASS: "${RABBITMQ_PASS}"
      TAIGA_SECRET_KEY: "${SECRET_KEY}"

    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8888/events"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

    networks:
      - taiga

    depends_on:
      taiga-events-rabbitmq:
        condition: service_started

  taiga-events-rabbitmq:
    image: rabbitmq:3.8-management-alpine

    environment:
      RABBITMQ_ERLANG_COOKIE: "${RABBITMQ_ERLANG_COOKIE}"
      RABBITMQ_DEFAULT_USER: "${RABBITMQ_USER}"
      RABBITMQ_DEFAULT_PASS: "${RABBITMQ_PASS}"
      RABBITMQ_DEFAULT_VHOST: "${RABBITMQ_VHOST}"

    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_running"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

    hostname: "taiga-events-rabbitmq"

    volumes:
      - taiga-events-rabbitmq-data:/var/lib/rabbitmq

    networks:
      - taiga

  taiga-protected:
    image: taigaio/taiga-protected:latest

    environment:
      MAX_AGE: "${ATTACHMENTS_MAX_AGE}"
      SECRET_KEY: "${SECRET_KEY}"

    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8003"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

    networks:
      - taiga

  taiga-gateway:
    image: nginx:1.19-alpine

    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost/api/v1/wiki"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

    volumes:
      - ./taiga-gateway/taiga.conf:/etc/nginx/conf.d/default.conf
      - taiga-static-data:/taiga/static
      - taiga-media-data:/taiga/media

    networks:
      - taiga

    depends_on:
      - taiga-front
      - taiga-back
      - taiga-events


  taiga-manage:
    image: taigaio/taiga-back:latest

    environment:   
      POSTGRES_DB: "taiga"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_HOST: "taiga-db"

      TAIGA_SECRET_KEY: "${SECRET_KEY}"
      TAIGA_SITES_SCHEME: "${TAIGA_SCHEME}"
      TAIGA_SITES_DOMAIN: "${TAIGA_DOMAIN}"

      EMAIL_BACKEND: "django.core.mail.backends.${EMAIL_BACKEND}.EmailBackend"
      DEFAULT_FROM_EMAIL: "${EMAIL_DEFAULT_FROM}"
      EMAIL_USE_TLS: "${EMAIL_USE_TLS}"
      EMAIL_USE_SSL: "${EMAIL_USE_SSL}"
      EMAIL_HOST: "${EMAIL_HOST}"
      EMAIL_PORT: "${EMAIL_PORT}"
      EMAIL_HOST_USER: "${EMAIL_HOST_USER}"
      EMAIL_HOST_PASSWORD: "${EMAIL_HOST_PASSWORD}"

      RABBITMQ_USER: "${RABBITMQ_USER}"
      RABBITMQ_PASS: "${RABBITMQ_PASS}"
      CELERY_ENABLED: "False"

    profiles:
      - manual
    restart: "no"

    depends_on:
      - taiga-db

    entrypoint: "python manage.py"

    volumes:
      - taiga-static-data:/taiga-back/static
      - taiga-media-data:/taiga-back/media
      # - ./config.py:/taiga-back/settings/config.py

    networks:
      - taiga

volumes:
  taiga-static-data:
  taiga-media-data:
  taiga-db-data:
  taiga-async-rabbitmq-data:
  taiga-events-rabbitmq-data:

networks:
  taiga:
